---

name: release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    if: github.event.base_ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 4
      matrix:
        goos: [ linux, openbsd ]
        goarch: [ amd64 ]

    steps:
      - name: Install Go
        uses: actions/setup-go@v2

      - name: Checkout
        uses: actions/checkout@v2

      - name: Test
        run: go test ./...

      - name: Build
        env:
          GOOS: '${{ matrix.goos }}'
          GOARCH: '${{ matrix.goarch }}'
        run: go build -o build/${{ matrix.goos }}-${{ matrix.goarch }}/ipmoveOvh

      - name: Archive
        run: |
          zip -j build/ipmoveOvh-${{ matrix.goos }}-${{ matrix.goarch }}.zip build/${{ matrix.goos }}-${{ matrix.goarch }}/ipmoveOvh

      - name: Store results
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/*.zip

  create-release:
    needs: build
    runs-on: ubuntu-latest

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Initial **release**
          draft: false
          prerelease: false

  assets:
    needs: [ create-release, build ]
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 4
      matrix:
        goos: [ linux, openbsd ]
        goarch: [ amd64 ]

    steps:
      - name: Download results
        uses: actions/download-artifact@v2
        with:
          name: build-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build

      - name: Upload Release Assets
        id: upload-release-assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: build/ipmoveOvh-${{ matrix.goos }}-${{ matrix.goarch }}.zip
          asset_name: ipmoveOvh-${{ matrix.goos }}-${{ matrix.goarch }}.zip
          asset_content_type: application/zip

  assets-checksum:
    needs: [ create-release, assets ]
    runs-on: ubuntu-latest

    steps:
      - name: Download results (linux-amd64)
        uses: actions/download-artifact@v2
        with:
          name: build-linux-amd64
          path: build

      - name: Download results (openbsd-amd64)
        uses: actions/download-artifact@v2
        with:
          name: build-openbsd-amd64
          path: build

      - name: Create Checksums
        run: |
          cd build && sha256sum *.zip > SHA256SUMS

      - name: Upload Release Assets Checksums
        id: upload-release-assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: build/SHA256SUMS
          asset_name: SHA256SUMS
          asset_content_type: text/plain
